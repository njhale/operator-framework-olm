// Package v1alpha1 implements all the required types and methods for parsing
// resources for v1alpha1 versioned OperatorVersions.
package v1alpha1

import (
	"encoding/json"

	"github.com/coreos/go-semver/semver"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	"k8s.io/apimachinery/pkg/runtime"
)

// GroupVersion is the version used in the Scheme for OperatorVersions.
const GroupVersion = "v1alpha1"

// NamedInstallStrategy represents the block of an OperatorVersion resource
// where the install strategy is specified.
type NamedInstallStrategy struct {
	StrategyName    string          `json:"strategy"`
	StrategySpecRaw json.RawMessage `json:"spec"`
}

// OperatorVersionSpec declarations tell the ALM how to install an operator
// that can manage apps for given version and AppType.
type OperatorVersionSpec struct {
	InstallStrategy NamedInstallStrategy         `json:"install"`
	Version         semver.Version               `json:"version"`
	Maturity        string                       `json:"maturity"`
	Requirements    []*unstructured.Unstructured `json:"requirements"`
	Permissions     []string                     `json:"permissions"`
}

// OperatorVersion is a Custom Resource of type `OperatorVersionSpec`.
type OperatorVersion struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata"`

	Spec   OperatorVersionSpec `json:"spec"`
	Status metav1.Status       `json:"status"`
}

// DeepCopyInto implements the runtime.Object interface and should eventually
// be generated code.
//
// DeepCopyInto is an autogenerated deepcopy function, copying the receiver,
// writing into out. in must be non-nil.
func (in *OperatorVersion) DeepCopyInto(out *OperatorVersion) {
	*out = *in
	return
}

// DeepCopy implements the runtime.Object interface and should eventually be
// generated code.
//
// DeepCopy is an autogenerated deepcopy function, copying the receiver,
// creating a new OperatorVersion.
func (in *OperatorVersion) DeepCopy() *OperatorVersion {
	if in == nil {
		return nil
	}
	out := new(OperatorVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject implements the runtime.Object interface and should
// eventually be generated code.
//
// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OperatorVersion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}

	return nil
}

// OperatorVersionList represents a list of OperatorVersions.
type OperatorVersionList struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata"`

	Items []OperatorVersion `json:"items"`
}

// DeepCopyInto implements the runtime.Object interface and should eventually
// be generated code.
//
// DeepCopyInto is an autogenerated deepcopy function, copying the receiver,
// writing into out. in must be non-nil.
func (in *OperatorVersionList) DeepCopyInto(out *OperatorVersionList) {
	*out = *in
	return
}

// DeepCopy implements the runtime.Object interface and should eventually be
// generated code.
//
// DeepCopy is an autogenerated deepcopy function, copying the receiver,
// creating a new OperatorVersion.
func (in *OperatorVersionList) DeepCopy() *OperatorVersionList {
	if in == nil {
		return nil
	}
	out := new(OperatorVersionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject implements the runtime.Object interface and should
// eventually be generated code.
//
// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OperatorVersionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}
