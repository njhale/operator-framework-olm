image: golang:1.9.0
variables:
  GIT_REPO_NAME: github.com/coreos-inc/alm
  IMAGE_REPO_NAME: quay.io/coreos/alm
  DOCKER_HOST: tcp://docker-host.gitlab-runner.svc.cluster.local:2375
  DOCKER_DRIVER: overlay
  K8S_NAMESPACE: ci-alm-${CI_COMMIT_REF_SLUG}
before_script:
  - mkdir -p $GOPATH/src/$GIT_REPO_NAME
  - cp -a $CI_PROJECT_DIR/* $GOPATH/src/$GIT_REPO_NAME
  - cd $GOPATH/src/$GIT_REPO_NAME
stages:
    - test
    - docker_build
    - docker_ci_build
    - deploy_preview
    - stop_preview
    - deploy_staging
unit-tests:
    stage: test
    tags:
        - kubernetes
    script:
      - make test
container-build:
  only:
    - master
  stage: docker_build
  before_script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io
  image: docker:git
  script:
    - docker build -t ${IMAGE_REPO_NAME}:${CI_COMMIT_REF_SLUG}-${SHA8} -f Dockerfile .
    - docker push ${IMAGE_REPO_NAME}:${CI_COMMIT_REF_SLUG}-${SHA8}
  tags:
    - kubernetes
container-ci-build:
  before_script:
  - docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io
  image: docker:git
  script:
  - docker build --no-cache -t ${IMAGE_REPO_NAME}-ci:${CI_COMMIT_REF_SLUG} -f Dockerfile .
  - docker push $IMAGE_REPO_NAME-ci:${CI_COMMIT_REF_SLUG}
  stage: docker_ci_build
  tags:
  - kubernetes
  except:
  - master
  only:
  - branches
deploy_preview:
  before_script:
  - appr login -u $DOCKER_USER -p $DOCKER_PASS quay.io
  - cd deploy/alm-app
  - 'echo version: 1.0.0-${CI_COMMIT_REF_SLUG} >> Chart.yaml'
  - 'echo "{\"image\": \"${IMAGE_REPO_NAME}-ci:${CI_COMMIT_REF_SLUG}\", \"tag\": \"${CI_COMMIT_REF_SLUG}\"}" > params.json'
  - cat params.json
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    on_stop: stop_preview
  except:
  - master
  image: ${IMAGE_REPO_NAME}-ci-build:latest
  except:
  - master
  only:
  - branches
  script:
  - appr push --channel alpha ${IMAGE_REPO_NAME}-ci-app -f
  - cd ..
  - kubectl create ns $K8S_NAMESPACE
  - kubectl create secret docker-registry coreos-pull-secret --docker-server=quay.io --docker-username=$DOCKER_USER --docker-password=$DOCKER_PASS --docker-email=toto@toto.com --namespace=$K8S_NAMESPACE
  - helm install -n $K8S_NAMESPACE ./alm-app --namespace=$K8S_NAMESPACE --set image.repository=${IMAGE_REPO_NAME}-ci --set image.tag=${CI_COMMIT_REF_SLUG} --set namespace=$K8S_NAMESPACE
  - kubectl get ingresses -n $K8S_NAMESPACE -o wide
  stage: deploy_preview
  tags:
  - kubernetes
  variables:
  when: manual
stop_preview:
  before_script: []
  environment:
    action: stop
    name: review/${CI_COMMIT_REF_SLUG}
  except:
  - master
  image: ${IMAGE_REPO_NAME}-ci-build:latest
  except:
  - master
  only:
  - branches
  script:
  - helm del --purge $K8S_NAMESPACE
  - kubectl delete ns $K8S_NAMESPACE
  - kubectl get pods -o wide -n $K8S_NAMESPACE
  stage: deploy_preview
  tags:
  - kubernetes
  variables:
    GIT_STRATEGY: none
  when: manual
deploy-staging:
  before_script:
  - appr login -u $DOCKER_USER -p $DOCKER_PASS quay.io
  - cd deploy/alm-app
  - 'echo version: 1.0.0-${CI_COMMIT_REF_SLUG}-${SHA8} >> Chart.yaml'
  - 'echo "{\"image\": \"${IMAGE_REPO_NAME}:${CI_COMMIT_REF_SLUG}-${SHA8}\"}" > params.json'
  - cat params.json
  environment:
    name: staging
  image: ${IMAGE_REPO_NAME}-ci-build:latest
  only:
  - master
  script:
  - appr push --channel staging ${IMAGE_REPO_NAME}-${SHA8}-app -f
  - cd ..
  - helm upgrade alm-app ./alm-app --install --force --namespace=alm-app
  - kubectl get ingresses -n alm-app -o wide
  stage: deploy_staging
  tags:
  - kubernetes
