// Automatically generated by MockGen. DO NOT EDIT!
// Source: pkg/client/subscription_client.go

package catalog

import (
	v1alpha1 "github.com/coreos-inc/alm/pkg/apis/subscription/v1alpha1"
	gomock "github.com/golang/mock/gomock"
)

// Mock of SubscriptionClientInterface interface
type MockSubscriptionClientInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockSubscriptionClientInterfaceRecorder
}

// Recorder for MockSubscriptionClientInterface (not exported)
type _MockSubscriptionClientInterfaceRecorder struct {
	mock *MockSubscriptionClientInterface
}

func NewMockSubscriptionClientInterface(ctrl *gomock.Controller) *MockSubscriptionClientInterface {
	mock := &MockSubscriptionClientInterface{ctrl: ctrl}
	mock.recorder = &_MockSubscriptionClientInterfaceRecorder{mock}
	return mock
}

func (_m *MockSubscriptionClientInterface) EXPECT() *_MockSubscriptionClientInterfaceRecorder {
	return _m.recorder
}

func (_m *MockSubscriptionClientInterface) CreateSubscription(_param0 *v1alpha1.Subscription) (*v1alpha1.Subscription, error) {
	ret := _m.ctrl.Call(_m, "CreateSubscription", _param0)
	ret0, _ := ret[0].(*v1alpha1.Subscription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSubscriptionClientInterfaceRecorder) CreateSubscription(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateSubscription", arg0)
}

func (_m *MockSubscriptionClientInterface) UpdateSubscription(_param0 *v1alpha1.Subscription) (*v1alpha1.Subscription, error) {
	ret := _m.ctrl.Call(_m, "UpdateSubscription", _param0)
	ret0, _ := ret[0].(*v1alpha1.Subscription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSubscriptionClientInterfaceRecorder) UpdateSubscription(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateSubscription", arg0)
}
